

https://blog.csdn.net/u010823943/article/details/54565364

if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {//android6.0及以上，需要判断运行时权限

}

需要判断的权限：

CALENDAR（日历） 
android.Manifest.permission.READ_CALENDAR
android.Manifest.permission.WRITE_CALENDAR
CAMERA（相机） 
android.Manifest.permission.CAMERA
CONTACTS（联系人） 
android.Manifest.permission.READ_CONTACTS
android.Manifest.permission.WRITE_CONTACTS
android.Manifest.permission.GET_ACCOUNTS
LOCATION（位置） 
android.Manifest.permission.ACCESS_FINE_LOCATION
android.Manifest.permission.ACCESS_COARSE_LOCATION
MICROPHONE（麦克风） 
android.Manifest.permission.RECORD_AUDIO
PHONE（手机） 
android.Manifest.permission.READ_PHONE_STATE
android.Manifest.permission.CALL_PHONE
android.Manifest.permission.READ_CALL_LOG
android.Manifest.permission.WRITE_CALL_LOG
android.Manifest.permission.ADD_VOICEMAIL
android.Manifest.permission.USE_SIP
android.Manifest.permission.PROCESS_OUTGOING_CALLS
SENSORS（传感器） 
android.Manifest.permission.BODY_SENSORS
SMS（短信） 
android.Manifest.permission.SEND_SMS
android.Manifest.permission.RECEIVE_SMS
android.Manifest.permission.READ_SMS
android.Manifest.permission.RECEIVE_WAP_PUSH
android.Manifest.permission.RECEIVE_MMS
STORAGE（存储卡） 
android.Manifest.permission.READ_EXTERNAL_STORAGE
android.Manifest.permission.WRITE_EXTERNAL_STORAGE





//调用此方法申请权限时，必须同时重写permissionAllGranted方法
protected void doRequestPermissions(String[] permissions, int requestCode) {
	List<String> requestPermissionList = new ArrayList<String>();
	//找出所有未授权的权限
	for (String permission : permissions) {
		if (ContextCompat.checkSelfPermission(this, permission) != PackageManager.PERMISSION_GRANTED) {
			requestPermissionList.add(permission);
		}
	}
	if (requestPermissionList.isEmpty()) {
		permissionAllGranted(requestCode);
	} else {
		//申请授权
		ActivityCompat.requestPermissions(
				this,
				requestPermissionList.toArray(new String[requestPermissionList.size()]),
				requestCode);
	}
}

//所需权限已经全部授权时执行此操作
protected void permissionAllGranted(int requestCode) {
	//TODO
}

@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
	if (grantResults.length > 0) {
		List<String> deniedPermissionList = new ArrayList<>();
		for (int i = 0; i < grantResults.length; i++) {
			if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {
				deniedPermissionList.add(permissions[i]);
			}
		}
		if (deniedPermissionList.isEmpty()) {
			permissionAllGranted(requestCode);
			//Log.i(TAG, "onRequestPermissionsResult, 已经全部授权");
		} else {
			/*//勾选了对话框中”Don’t ask again”的选项, 返回false
			for (String deniedPermission : deniedPermissionList) {
				boolean flag = shouldShowRequestPermissionRationale(deniedPermission);
				if (flag == 返回false) {
					//拒绝授权并且勾选了“Don’t ask again”
					//TODO
					return;
				}
			}
			permissionHasDenied(deniedPermissionList);*/
			//Log.i(TAG, "onRequestPermissionsResult, 拒绝授权, deniedPermissionList = " + deniedPermissionList.toString());
			new BaseDialog(this)
					.showTwoBtnDialog(R.string.notice, R.string.msg_permission_error)
					.setCancelOnClickListener()
					.setSureOnClickListener(new View.OnClickListener() {
				@Override
				public void onClick(View v) {
					Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
					Uri uri = Uri.fromParts("package", getApplicationContext().getPackageName(), null);
					intent.setData(uri);
					startActivity(intent);
				}
			}).build().show();
		}
	}
}