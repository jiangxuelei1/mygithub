
package com.smartalarm.fragment;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.content.LocalBroadcastManager;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.PopupWindow;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.bumptech.glide.Glide;
import com.google.zxing.activity.CaptureActivity;
import com.smartalarm.MyApplication;
import com.smartalarm.R;
import com.smartalarm.activity.HomeActivity;
import com.smartalarm.chat.ChatMsg;
import com.smartalarm.chat.ChatService;
import com.smartalarm.entity.Banner;
import com.smartalarm.entity.Constants;
import com.smartalarm.entity.Device;
import com.smartalarm.entity.HabitClassify;
import com.smartalarm.entity.Result;
import com.smartalarm.habit.SearchActivity;
import com.smartalarm.net.Callback;
import com.smartalarm.net.DataManager;
import com.smartalarm.net.OkHttpManager;
import com.smartalarm.settings.BindDeviceActivity;
import com.smartalarm.settings.SetDeviceAdapter;
import com.smartalarm.tools.CommonUtil;

import java.util.ArrayList;
import java.util.List;

import de.hdodenhof.circleimageview.CircleImageView;

/**
 * 主界面中，第一个页面【首页】
 */
public class HomeFirstFrag extends BaseFrag implements View.OnClickListener, BannerAdapter.OnPagerItemClickLitener {
    private List<Banner> bannersList = new ArrayList<>();
    private BannerAdapter bannerAdapter;
    private ViewPager vpBanner;
    private Handler handler;
    int item = -1;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.home_first, container, false);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        mAcy = getActivity();

		initVp();
        getBannerList();
    }

    public void setHandler(Handler handler) {
        if (this.handler == null) {
            this.handler = handler;
        } else {
            if (bannersList.size() > 1) {
                nextPager();
            }
        }
    }

    private void initVp(View view) {
        vpBanner = view.findViewById(R.id.vp_banner);
        bannerAdapter = new BannerAdapter(MyApplication.getInstance());
        bannerAdapter.setOnPagerItemClickLitener(this);

        vpBanner.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

            }

            @Override
            public void onPageSelected(int position) {
                nextPager();
            }

            @Override
            public void onPageScrollStateChanged(int state) {
                switch (state) {
                    case ViewPager.SCROLL_STATE_DRAGGING:
                        handler.removeCallbacksAndMessages(null);
                        item = vpBanner.getCurrentItem();
                        break;
                    case ViewPager.SCROLL_STATE_IDLE:
                        if (item == vpBanner.getCurrentItem()) {
                            nextPager();
                        }

                        item = -1;
                        break;
                    case ViewPager.SCROLL_STATE_SETTLING:
                        break;

                }
            }
        });
        bannerAdapter.setBanners(bannersList);
        vpBanner.setAdapter(bannerAdapter);
        if (bannersList.size() > 0) {
            Log.i(TAG, "initVp, bannersList.size() > 0");
            vpBanner.setCurrentItem(bannersList.size() * 3000);
        } else {
            Log.i(TAG, "initVp, bannersList.size() <= 0");
        }
    }

    public void getBannerList() {
        OkHttpManager.instance().postAsync(……, null, new Callback() {
            @Override
            public void onResponse(Result result) {
                if (result == null) {
                    Log.e(TAG, "result is null");
                    return;
                } else if (result.getResultCode() != Result.SUCCESS) {
                    Log.e(TAG, "getResultCode not  SUCCESS!");
                    return;
                }
                JSONObject data = result.getData();
                final List<Banner> list = JSON.parseArray(data.getString("bannerList"), Banner.class);
                Log.i(TAG, "bannersList = " + bannersList);

                Activity mAcy = getActivity();
                if (null != mAcy) {
                    mAcy.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            bannersList.clear();
                            bannersList.addAll(list);
                            bannerAdapter.notifyDataSetChanged();
                            vpBanner.setCurrentItem(bannersList.size() * 3000);
                        }
                    });
                }
            }
        });
    }

    private void nextPager() {
        if (null != handler) {
            handler.removeCallbacksAndMessages(null);
            handler.postDelayed(new Runnable() {
                @Override
                public void run() {
                    int curPosition = vpBanner.getCurrentItem();
                    int nextPosition = (curPosition + 1) % Short.MAX_VALUE;
                    //Log.i(TAG, "curPositon = " + curPosition + ", nextPosition = " + nextPosition);
                    vpBanner.setCurrentItem(nextPosition);
                }
            }, 4000);
        }
    }

    @Override
    public void onItemClick(View view, int position) {
        Log.i(TAG, "position = " + position);
        ……
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        if (handler != null) {
            handler.removeCallbacksAndMessages(null);
        }
    }

}







package com.smartalarm.fragment;

import android.content.Context;
import android.support.v4.view.PagerAdapter;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import com.bumptech.glide.Glide;
import com.smartalarm.R;
import com.smartalarm.entity.Banner;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by jxl on 2018/7/21.
 */

class BannerAdapter extends PagerAdapter implements View.OnClickListener {

    private Context context;

    private OnPagerItemClickLitener onPagerItemClickLitener;

    private List<Banner> banners = new ArrayList<>();

    public BannerAdapter(Context context) {
        this.context = context;
    }

    public void setBanners(List<Banner> banners) {
        this.banners = banners;
    }

    @Override
    public int getCount() {
        return Short.MAX_VALUE;//32767
    }

    @Override
    public boolean isViewFromObject(View view, Object object) {
        return view == object;
    }

    @Override
    public void destroyItem(ViewGroup container, int position, Object object) {
        container.removeView((View) object);
    }

    @Override
    public Object instantiateItem(ViewGroup container, int position) {
        LayoutInflater inflater = LayoutInflater.from(context);
        View view = inflater.inflate(R.layout.banner_item_layout, null);
        ViewGroup parent = (ViewGroup) view.getParent();
        if (parent != null) {
            parent.removeAllViews();
        }
        if (banners.size() > 0) {
            ......
            view.setTag(position);
            if (onPagerItemClickLitener != null) {
                view.setOnClickListener(this);
            }
        }
        container.addView(view, 0);
        return view;
    }

    @Override
    public int getItemPosition(Object object) {
        return POSITION_NONE;
    }

    @Override
    public void onClick(View v) {
        if (null != v) {
            int pos = (Integer) v.getTag();
            if (null != banners) {
                pos = pos % banners.size();
                onPagerItemClickLitener.onItemClick(v, pos);
            }
        }
    }

    public interface OnPagerItemClickLitener {
        void onItemClick(View view, int position);
    }

    public void setOnPagerItemClickLitener(OnPagerItemClickLitener onPagerItemClickLitener) {
        this.onPagerItemClickLitener = onPagerItemClickLitener;
    }
}
